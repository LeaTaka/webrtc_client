#!/bin/bash
#
#1. Install Bonjour, iTunes or Quicktime on PC
#2. Flash latest Raspbian (Lite) image with BalenaEtcher
#3. Mount the SD card and go into BOOT folder
#4. dtoverlay=dwc2 => Add this string to the bottom of the CONFIG.TXT file on a new line
#5. ssh => Create ssh file without extension in BOOT 
#6. modules-load=dwc2,g_ether => insert this in CMDLINE.TXT Insert after rootwait. Be careful with this file, it is very picky with its formatting! Each parameter is seperated by a single space (it does not use newlines).
#7. Create a file in the root of boot called: wpa_supplicant.conf (instructions below). Then paste the following into it (adjusting for your ISO 3166 alpha-2 country code, network name and network password):
#   country=NL
#   ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
#   update_config=1
#   
#   network={
#       ssid="NETWORK-NAME"
#       psk="NETWORK-PASSWORD"
#   }
#8. That's it, eject the SD card from your computer, put it in your Raspberry Pi Zero and connect it via USB-connector to your computer. It will take up to 90s to boot up (shorter on subsequent boots). It should then appear as a USB Ethernet device. You can SSH into it using  raspberrypi.local as the address.
#9. Enable windows internet connection sharing on your internet connected adapter: Control Panel > Network and sharing center > Adapter settings > Properties > Sharing 
#10. change the ip address of the NDIS gadget to match your network
#11. sudo chmod u+x configure => Copy this configure file to the home root (/home/pi/webrtcClient) and make executable
#12. sudo ./configure => THIS INSTALLATION TAKES 1 HOUR !!!

#============================================================
# Let's GO !!
#`
#============================================================
# for COLOR in {1..255}; do echo -en "\e[38;5;${COLOR}m${COLOR} "; done; echo;
COLOR=227
h="

.::                          .::: .::::::          .::               
.::                               .::              .::               
.::         .::       .::         .::       .::    .::  .::   .::    
.::       .:   .::  .::  .::      .::     .::  .:: .:: .::  .::  .:: 
.::      .::::: .::.::   .::      .::    .::   .:: .:.::   .::   .:: 
.::      .:        .::   .::      .::    .::   .:: .:: .:: .::   .:: 
.::::::::  .::::     .:: .:::     .::      .:: .:::.::  .::  .:: .:::
"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
COLOR=200
echo ""
echo ""
echo ""
#============================================================
# Upgrade this system
# Firstly start with the uv4l related sources.list update
#============================================================
h="⚡ DIST UPGRADE"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
curl http://www.linux-projects.org/listing/uv4l_repo/lpkey.asc | sudo apt-key add -
# Populate `/etc/apt/sources.list (uv4l related)`
sudo bash -c 'cat > /etc/apt/sources.list' << EOF
deb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi
# Uncomment line below then 'apt-get update' to enable 'apt-get source'
#deb-src http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi
deb http://www.linux-projects.org/listing/uv4l_repo/raspbian/stretch stretch main
EOF
COLOR=227
h="⚡ No reboot required, continue installation ..."
sudo apt-get update
if sudo apt-get -y dist-upgrade | grep '0 upgraded, 0 newly installed'
  then lsb_release -d; echo -e "\e[38;5;${COLOR}m${h}\e[0m";
  else h="⚡ Reboot required, REBOOTING NOW !!"; echo -e "\e[38;5;${COLOR}m${h}\e[0m"; sleep 10; sudo reboot; sleep 5;
fi
#============================================================
# Generate certificate
#============================================================
COLOR=200
h="⚡ GENERATE SELFSIGNED CERTIFICATE FOR UV4L"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
sudo mkdir cert
cd cert
sudo openssl genrsa -aes128 -out server.key 2048
echo "now we remove passphrase from private key"
sudo openssl rsa -in server.key -out server.key
sudo openssl req -new -key server.key -out server.csr -subj "/C=NL/ST=NH/L=Amsterdam/O=Global Security/OU=IT Department/CN=localhost"
echo "do not choose a challenge password"
echo "create key, crt and csr"
sudo openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 3650
echo "rename crt to .pem per uv4l prerequisite"
sudo mv server.crt server.pem
cd ..
#============================================================
# Install dependencies
#`
#============================================================
COLOR=200
h="⚡ INSTALL DEPENDENCIES"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
sudo apt -y install git
sudo apt -y install python3-rpi.gpio
sudo apt -y install python3-venv
sudo apt -y install python3-pip
sudo pip3 install requests w1thermsensor spidev
sudo raspi-config nonint do_spi 0 # enable spi in raspi-config
sudo chmod u+x main_start.py
#============================================================
# Install Uv4l
#`
#============================================================
h="⚡ INSTALL UV4L"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
# install uv4l
sudo apt -y install uv4l uv4l-server uv4l-dummy uv4l-webrtc-armv6
#============================================================
# Install respeaker
#`
#============================================================
h="⚡ INSTALL RESPEAKER"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
git clone https://github.com/respeaker/seeed-voicecard
cd seeed-voicecard
sudo ./install.sh
cd ..
sudo rm -rf seeed-voicecard
#============================================================
# Install all SD18B20 temperature sensor prerequisites
#`This will only be used when the sensor is installed
#============================================================
h="⚡ INSTALL SD18B20"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
sudo bash -c 'cat >> /etc/modules' << EOF
w1-gpio pullup=1
w1-therm
EOF

sudo bash -c 'cat >> /boot/config.txt' << EOF
# 1-wire settings
dtoverlay=w1-gpio,gpiopin=12
EOF
#============================================================
# Install the supercool RASPAP project
# This will only be installed for raspberry pi zero w
#============================================================
COLOR=200
STR="$(cat /proc/device-tree/model)"
RPI0="Raspberry Pi Zero Rev"
RPI0W="Raspberry Pi Zero W Rev"
if case $STR in *$RPI0W*) true;; *) false;; esac; then
  h="⚡ INSTALL RASPAP"
  echo -e "\e[38;5;${COLOR}m${h}\e[0m";
  sudo raspi-config nonint do_wifi_country NL
  sudo curl -sL https://install.raspap.com | bash -s -- --yes

  COLOR=200
  h="⚡ RASPAP POST-CONFIGURATION FOR ENABLING SIMULTANIOUS AP & CLIENT CONFIG"
  echo -e "\e[38;5;${COLOR}m${h}\e[0m";
  ## Set managed mode (WifiAPEnable = 1)
  COLOR=212
  h="Enable managed mode in /etc/raspap/hostapd.ini"
  echo -e "\e[38;5;${COLOR}m${h}\e";
  sudo bash -c 'cat > /etc/raspap/hostapd.ini' << EOF
LogEnable = 0
WifiAPEnable = 1
WifiManaged = wlan0
EOF

  ## Configure hostapd.conf
  echo "Configure /etc/hostapd/hostapd.conf (SSID: LeaTaka / PASSW: changeme)"
  sudo bash -c 'cat > /etc/hostapd/hostapd.conf' << EOF
driver=nl80211
ctrl_interface=/var/run/hostapd
ctrl_interface_group=0
auth_algs=1
wpa_key_mgmt=WPA-PSK
beacon_int=100
ssid=LeaTaka
channel=1
hw_mode=g
ieee80211n=0
wpa_passphrase=changeme
interface=uap0
wpa=3
wpa_pairwise=TKIP CCMP
country_code=NL
ignore_broadcast_ssid=0
max_num_sta=5
EOF

  ## Configure dnsmasq
  echo "Configure /etc/dnsmasq.conf"
  sudo bash -c 'cat > /etc/dnsmasq.conf' << EOF
interface=lo,uap0               # Enable uap0 interface for wireless client AP mode
bind-interfaces                 # Bind to the interfaces
server=8.8.8.8                  # Forward DNS requests to Google DNS
domain-needed                   # Don't forward short names
bogus-priv                      # Never forward addresses in the non-routed address spaces
dhcp-range=10.3.141.50,10.3.141.255,255.255.255.0,12h
EOF

  ## Configure dhcpcd.conf
  echo "Configure /etc/dhcpcd.conf"
  sudo bash -c 'cat > /etc/dhcpcd.conf' << EOF
# RaspAP uap0 configuration
interface uap0
static ip_address=192.168.50.1/24
nohook wpa_supplicant
EOF

  ## Set webgui password to (changeme)
  echo "Set webgui password to: changeme"
  sudo bash -c 'cat > /etc/raspap/raspap.auth' << EOF
admin
\$2y\$10\$DxxAsfJQMxjzk/Erg6ay1O/k75b19279D4EW/YUesWyyPrMNEoaMa
EOF
  ## Set WifiClient list as default PHP page
  echo "Set wifi client list as default PHP page"
  sudo sed -z 's|default:\n\t\tDisplayDashboard|default:\n\t\tDisplayWPAConfig|' -i /var/www/html/index.php

  ## Set new hostname for Pi Zero W
  sudo raspi-config nonint do_hostname rpi0w
  d="⚡ HOSTNAME raspberrypi.local HAS BEEN CHANGED TO rpi0w.local"
  echo -e "\e[38;5;${COLOR}m${h}\e[0m";
elif case $STR in *$RPI0*) true;; *) false;; esac; then
  ## Set new hostname for Pi Zero
  sudo raspi-config nonint do_hostname rpi0
  d="⚡ HOSTNAME raspberrypi.local HAS BEEN CHANGED TO rpi0.local"
else
  d="⚡ HOSTNAME raspberrypi.local HAS NOT BEEN CHANGED"
fi
#============================================================
# INSTALL SERVICES
#============================================================
COLOR=200
h="⚡ INSTALL SERVICES"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
#============================================================
# add lea.service
# Create and populate `/etc/systemd/system/lea.service`
#============================================================
sudo bash -c 'cat > /etc/systemd/system/lea.service' << EOF
[Unit]
Description=Respeaker babyMonitorServices. Boot
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
Environment="OPENSSL_CONF=/home/pi/webrtc_client/cert/openssl.cnf"
Restart=on-failure
ExecStart=/usr/bin/python3 -u /home/pi/webrtc_client/main_start.py
PrivateTmp=false

[Install]
WantedBy=multi-user.target
EOF
sudo chmod 644 /etc/systemd/system/lea.service
sudo systemctl enable lea.service
#============================================================
# add leaM.service
# Create and populate `/etc/systemd/system/leaM.service`
#============================================================
sudo bash -c 'cat > /etc/systemd/system/leaM.service' << EOF
[Unit]
Description=Respeaker babyMonitorServices. Manual
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
Environment="OPENSSL_CONF=/home/pi/webrtc_client/cert/openssl.cnf"
ExecStart=/usr/bin/python3 -u /home/pi/webrtc_client/main_start.py start
RemainAfterExit=true

[Install]
WantedBy=multi-user.target
EOF
sudo chmod 644 /etc/systemd/system/leaM.service
sudo systemctl daemon-reload
#============================================================
# Wrap up !
# 
#============================================================
echo "";
COLOR=45
echo -e "\e[38;5;${COLOR}m${d}\e[0m";
h="⚡ CHANGE YOUR PASSWORD AND HOSTNAME IN THE RASPI-CONFIG"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
sleep 5
h="⚡ FINISHED INSTALLING RESPEAKER MONITOR"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
h="⚡ REBOOT THIS MACHINE"
echo -e "\e[38;5;${COLOR}m${h}\e[0m";
